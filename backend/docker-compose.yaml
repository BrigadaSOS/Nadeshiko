services:
  pgroonga:
    image: groonga/pgroonga:latest
    environment:
      POSTGRES_DB: ${PG_DATABASE}
      POSTGRES_USER: ${PG_USER}
      POSTGRES_PASSWORD: ${PG_PASSWORD}
    command: postgres -c wal_level=logical -c max_replication_slots=10 -c max_slot_wal_keep_size=5GB
    volumes:
      - local_pgdata:/var/lib/postgresql/data
    ports:
      - ${PG_PORT}:5432
    networks:
      - nadedb-network

  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@pgadmin.com
      PGADMIN_DEFAULT_PASSWORD: password
      PGADMIN_LISTEN_PORT: 80
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    ports:
      - 15400:80
    networks:
      - nadedb-network
    depends_on:
      - pgroonga

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.8.2
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
      - xpack.security.enabled=false
      - network.host=127.0.0.1
      - http.host=0.0.0.0
    ports:
      - 9200:9200
      - 9300:9300
    command: >
      bash -c '
        if [ ! "-d" "/usr/share/elasticsearch/plugins/analysis-icu" ]; then
          ./bin/elasticsearch-plugin install analysis-icu;
        fi;
        if [ ! "-d" "/usr/share/elasticsearch/plugins/analysis-kuromoji" ]; then
          ./bin/elasticsearch-plugin install analysis-kuromoji;
        fi;
        ./bin/elasticsearch
      '
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
      - elasticsearch_config:/usr/share/elasticsearch/config
      - elasticsearch_plugins:/usr/share/elasticsearch/plugins

    networks:
      - nadedb-network

  redis:
    image: redis
    command: redis-server --requirepass nadeshiko
    ports:
      - 6379:6379
    networks:
      - nadedb-network

  kibana:
    image: docker.elastic.co/kibana/kibana:8.8.2
    ports:
      - 5601:5601
    volumes:
      - kibana_data:/usr/share/kibana/config
    environment:
      ELASTICSEARCH_URL: "http://elasticsearch:9200/"
    networks:
      - nadedb-network
    restart: always
    depends_on:
      - elasticsearch

  pgsync:
    image: natsume197/pgsync:3.2.1
    networks:
    - nadedb-network
    depends_on:
      - pgroonga
      - redis
      - elasticsearch
    volumes:
      - ./config/pgsync:/code/pgsync
    command: >
      bash -c '
        /bin/sleep 5
        chmod 777 -R /code
        /code/pgsync/runserver.sh'
    restart: unless-stopped
    labels:
      org.label-schema.name: "pgsync"
      org.label-schema.description: "Postgres to Elasticsearch sync"
      com.label-schema.service-type: "daemon"
    environment:
      PG_USER: ${PG_USER}
      PG_PASSWORD: ${PG_PASSWORD}
      PG_HOST: pgroonga
      PG_PORT: ${PG_PORT}
      LOG_LEVEL: INFO
      ELASTICSEARCH_PORT: 9200
      ELASTICSEARCH_SCHEME: http
      ELASTICSEARCH_HOST: elasticsearch
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_AUTH: nadeshiko
      ELASTICSEARCH: true
      OPENSEARCH: false

networks:
  nadedb-network:

volumes:
  local_pgdata:
  pgadmin-data:
  elasticsearch_data:
  elasticsearch_config:
  elasticsearch_plugins:
  kibana_data:
